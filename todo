
* Cities should prefer to auto-build cheaper buildings (esp. ones with discounts)

* Shouldn't generally build unrest-reducing buildings unless unrest > 0?




* Importing an old version of a kingdom, newer data saved in local storage can be loaded (e.g. build & populate a new
    city district, import older version, build same district again -> loads buildings previously set there).

* thrown melee weapons which can have both types of enhancements

Generalise not adjacent to to take a list of buildings

UC: Settlement base value starts at 0, not 200

Generalise "adjacent to" to take list of buildings?  UC has variations that do/don't include Mansions and Villas.  Might make it hard to score...

Hard to score positive "houseness" in UC with it not being something intrinsic to the building, but instead being referred to by other buildings.

Need to handle lots containing multiple buildings

Need to handle "parameterised" lots, that can contain (e.g.) a skill getting a lore bonus or a temple's alignment/variable kingdom bonusses.  Might as well allow custom rotation of building image as well.

Prompt for parameter on constructing buildings that need them

Building option: "Ruin building" (provides none of its benefits, but can be repaired for half price)

Checkboxs on build menu: "Free Building" and "Free Ruin"

Houses etc. can only fulfill one adjacency demand each

Houses etc. are adjacent across streets, as well as within blocks

Due to the above, I'm thinking of changing the coordinate system of lots within a settlement to simply be raster-scan style.  Need to handle old format when loading - if lots contained an object rather than a single building name, then can convert if after loading they contain strings.

UCam discounts only work once, for one of the listed buildings.

House rule: city defenses are divided by # of districts

House rule: city walls are per-district and defend on all sides

House rule interface to edit/add custom buildings.

Alert when loading unknown buildings/leadership roles, prompting for substitution.  Initialise with Acadamy -> Academy and Marshall -> Marshal

Adjacency across streets while keeping existing coordinate system

00 01  04 05  08 09  12 13
02 03  06 07  10 11  14 15

16 17  20 21
18 19  22 23

across street north: -14
across street south: +14

across street east: +3
across street west: -3

nw: -17
ne: -11
sw: +11
se: +17

function countAdjacent(index, buildings) {
    var square = parseInt(index / 4);
    var isTop = (square < 3);
    var isBottom = (square >= 6);
    var isLeft = (square % 3) == 0;
    var isRight = (square % 3) == 2;
    var baseIndex = index & ~3;
    var position = (index & 3);

    var count = countBuilding(baseIndex, buildings, baseIndex != index);
    count += countBuilding(baseIndex + 1, buildings, baseIndex + 1 != index);
    count += countBuilding(baseIndex + 2, buildings, baseIndex + 2 != index);
    count += countBuilding(baseIndex + 3, buildings, baseIndex + 3 != index);
    count += countBuilding(index - 14, buildings, position < 2 && !isTop);
    count += countBuilding(index + 14, buildings, position > 1 && !isBottom);
    count += countBuilding(index - 3, buildings, (position&1) == 0 && !isLeft);
    count += countBuilding(index + 3, buildings, (position&1) == 1 && !isRight);
    count += countBuilding(index - 17, buildings, position == 0 && !isLeft && !isTop);
    count += countBuilding(index - 11, buildings, position == 1 && !isRight && !isTop);
    count += countBuilding(index + 11, buildings, position == 2 && !isLeft && !isBottom);
    count += countBuilding(index + 17, buildings, position == 3 && !isRight && !isBottom);

    return count;
}
